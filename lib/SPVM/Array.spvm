class Array {
  precompile static method copy_string : string[] ($array : string[], $offset = 0 : int, $length = -1 : int) {
    unless ($array) {
      die "The \$array must be defined";
    }
    
    unless ($offset >= 0) {
      die "The \$offset must be greater than or equal to 0";
    }
    
    my $array_length = @$array;
    if ($length < 0) {
      $length = $array_length - $offset;
    }
    
    unless ($offset + $length <= $array_length) {
      die "The \$offset + the \$length must be less than or equal to the length of the \$array";
    }
    
    my $new_array = new string[$length];
    
    for (my $i = 0; $i < $length; $i++) {
      $new_array->[$i] = copy $array->[$offset + $i];
    }
    
    return $new_array;
  }
  native static method memmove_byte : void ($dest : byte[], $dest_offset : int, $source : byte[], $source_offset : int, $length : int);
}

