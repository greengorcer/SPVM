package TestCase::Lib::SPVM::Sort {
  use SPVM::Sort;
  use SPVM::Util;
  use SPVM::Comparator::Byte;
  
  sub sortb : int () {
    {
      my $nums = [(byte)2, 3, 1];
      
      SPVM::Sort->sortb($nums, 0, scalar @$nums, sub : int ($self : self, $a : byte, $b : byte) {
        return $a <=> $b;
      });
      
      unless (SPVM::Util->equals_barray($nums, [(byte)1, 2, 3])) {
        return 0;
      }
    }

    {
      my $nums = [(byte)2, 3, 1];
      
      SPVM::Sort->sortb($nums, 0, scalar @$nums, sub : int ($self : self, $a : byte, $b : byte) {
        return $b <=> $a;
      });
      
      unless (SPVM::Util->equals_barray($nums, [(byte)3, 2, 1])) {
        return 0;
      }
    }

    {
      my $nums = [(byte)2, 3, 1];
      
      SPVM::Sort->sortb($nums, 0, 0, sub : int ($self : self, $a : byte, $b : byte) {
        return $a <=> $b;
      });
      
      unless (SPVM::Util->equals_barray($nums, [(byte)2, 3, 1])) {
        return 0;
      }
    }

    {
      my $nums = [(byte)5, 2, 3, 1, -10];
      
      SPVM::Sort->sortb($nums, 1, 3, sub : int ($self : self, $a : byte, $b : byte) {
        return $a <=> $b;
      });
      
      unless (SPVM::Util->equals_barray($nums, [(byte)5, 1, 2, 3, -10])) {
        return 0;
      }
    }

    {
      my $nums = [(byte)2, 3, 1];
      
      eval {
        SPVM::Sort->sortb(undef, 0, scalar @$nums, sub : int ($self : self, $a : byte, $b : byte) {
          return $a <=> $b;
        });
      };
      unless ($@) {
        return 0;
      }
    }
    
    {
      my $nums = [(byte)5, 2, 3, 1, -10];
      
      eval {
        SPVM::Sort->sortb($nums, -1, 3, sub : int ($self : self, $a : byte, $b : byte) {
          return $a <=> $b;
        });
      };
      unless ($@) {
        return 0;
      }
    }

    {
      my $nums = [(byte)5, 2, 3, 1, -10];
      
      eval {
        SPVM::Sort->sortb($nums, 1, -1, sub : int ($self : self, $a : byte, $b : byte) {
          return $a <=> $b;
        });
      };
      unless ($@) {
        return 0;
      }
    }

    {
      my $nums = [(byte)5, 2, 3, 1, -10];
      
      eval {
        SPVM::Sort->sortb($nums, 3, 3, sub : int ($self : self, $a : byte, $b : byte) {
          return $a <=> $b;
        });
      };
      unless ($@) {
        return 0;
      }
    }
    
    $@ = undef;
    
    return 1;
  }
}
